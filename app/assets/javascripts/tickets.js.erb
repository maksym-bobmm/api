
document.addEventListener('turbolinks:load', function () {
    mapboxgl.accessToken = '<%= Rails.application.secrets.mapbox_map_token %>';
    let geojson = gon.geojson;
    if (!geojson)
        return;
    let map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: geojson.source.data.features[0].geometry.coordinates,
        zoom: 9
    });
    put_controls_on_map(map);
    add_source(map, Object.assign({}, geojson));
    put_points_on_map(map);
    fill_map_between_points(map, Object.assign({}, geojson));
    add_cluster_to_map(map);
    add_click_on_cluster(map);
    add_cursor_change_on_cluster(map);
});
function change_json_for_fill(geojson) {
    geojson.type = 'fill';
    geojson.id = 'maine';
    geojson.source.data.type = 'Feature';
    let coordinates = []
    for (let features of geojson.source.data.features)
        coordinates.push(features.geometry.coordinates);
    geojson.layout = {};
    geojson.source.data.geometry = {
        'type': 'Polygon',
        'coordinates': [
            coordinates
        ]
    };
    geojson.minzoom = 9;
    return geojson;
}
function add_source(map, geojson) {
    map.on('load', function() {
        map.addSource("excavators", {
            type: "geojson",
            data: {
                type: "FeatureCollection",
//                crs: { type: "name", properties: { "name": "urn:ogc:def:crs:OGC:1.3:CRS84" } },
                features: geojson.source.data.features
            },
            cluster: true,
            clusterMaxZoom: 8, // Max zoom to cluster points on
            clusterRadius: 50
//        length: 80
        })
    });
}
function put_controls_on_map(map) {
    let map_controls = {
        scale: new mapboxgl.ScaleControl({
            maxWidth: 100,
            unit: 'metric'
        }),
        fullscreen: new mapboxgl.FullscreenControl(),
        navigation: new mapboxgl.NavigationControl()
    }
    map.addControl(map_controls.scale);
    map.addControl(map_controls.navigation, 'bottom-right');
    map.addControl(map_controls.fullscreen);
}
function put_points_on_map(map) {
    map.on('load', function() {
//    geojson.source.data.features.forEach(function (marker) {
//        let el = document.createElement('div');
//        el.className = 'marker';

//        new mapboxgl.Marker(el)
//            .setLngLat(marker.geometry.coordinates)
//            .addTo(map);
//    })
        map.addLayer({
            id: 'unclustered-point',
            type: 'circle',
            source: 'excavators',
            filter: ['!', ['has', 'point_count']],
            paint: {
                'circle-color': '#000000',
                'circle-radius': 10,
                'circle-stroke-width': 1,
                'circle-stroke-color': '#fff'
            }
        });
    });
}
function fill_map_between_points(map, geojson) {
    geojson = change_json_for_fill(geojson);
    map.on('load', function() {
        map.addLayer(geojson);
    });
}
function add_cluster_to_map(map) {
    map.on('load', function() {
        map.addLayer({
            id: "clusters",
            type: "circle",
            source: "excavators",
            filter: ['has', 'point_count'],
            paint: {
                'circle-color': [
                    'step',
                    ['get', 'point_count'],
                    '#000000',
                    5,
                    '#f1f075',
                    15,
                    '#72f238'
                ],
                'circle-radius': [
                    'step',
                    ['get', 'point_count'],
                    20,
                    5,
                    30,
                    15,
                    40
                ],
                'circle-stroke-color': 'black',
                'circle-stroke-width': 1
            }
        })
        map.addLayer({
            id: 'cluster-count',
            type: 'symbol',
            source: 'excavators',
            filter: ['has', 'point_count'],
            layout: {
                'text-field': '{point_count_abbreviated}',
                'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                'text-size': 16
            }
        });
    });
}
function add_click_on_cluster(map) {
    map.on('click', 'clusters', function(e) {
        let features = map.queryRenderedFeatures(e.point, {
            layers: ['clusters']
        });
        let clusterId = features[0].properties.cluster_id;
        map.getSource('excavators').getClusterExpansionZoom(
            clusterId,
            function(err, zoom) {
                if (err) return;

                map.easeTo({
                    center: features[0].geometry.coordinates,
                    zoom: zoom
                });
            }
        );
    });
}
function add_cursor_change_on_cluster(map) {
    map.on('mouseenter', 'clusters', function() {
        map.getCanvas().style.cursor = 'pointer';
    });
    map.on('mouseleave', 'clusters', function() {
        map.getCanvas().style.cursor = '';
    });
}
